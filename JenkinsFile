pipeline {
    agent any

    environment {
        RTM_API_TOKEN = credentials('ATATT3xFfGF05MzQ4k2ohOqYk0VOiDL_ihAK2BZnQW6VZrcZolwM76wg5ievCLiiHtvd6H1oTfh07C6-v1ze4cw0oY6VsmFgj5ftw5gxKuGq_whwA95xhsa2LYqkuQAX2gXcSfA1-9EpQiRGFhvJfbh4Cyc1gyR34T3KWYgpg4Tfi3oObhg22Ws=A6493266') // Credential ID for RTM API token
        PROJECT_KEY = 'TCM'             // Replace with your RTM project key
        RTM_URL = 'https://rtm-api.hexygen.com/api'    // Replace with your RTM instance URL
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }
        stage('Build and Test') {
            steps {
                sh 'mvn clean test' // Adjust command based on your build tool
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml' // Archive JUnit test results
                }
            }
        }
        stage('Archive Test Results') {
            steps {
                archiveArtifacts artifacts: 'target/surefire-reports/*.xml', fingerprint: true
            }
        }
        stage('Import Test Results to RTM') {
            steps {
                script {
                    def testResultsZip = 'test-results.zip'
                    // Compress test result files into a ZIP
                    sh "zip -j ${testResultsZip} target/surefire-reports/*.xml"

                    // Prepare the API request
                    def importResponse = sh(
                        script: """
                            curl -X POST '${RTM_URL}/api/v2/automation/import-test-results' \\
                            -H 'Authorization: Bearer ${RTM_API_TOKEN}' \\
                            -F 'projectKey=${PROJECT_KEY}' \\
                            -F 'file=@${testResultsZip}' \\
                            -F 'reportType=JUNIT' \\
                            -F 'jobUrl=${env.BUILD_URL}'
                        """,
                        returnStdout: true
                    ).trim()

                    echo "Import Response: ${importResponse}"

                    // Extract the task ID from the response if needed
                    // def taskId = parse the importResponse to get the task ID
                }
            }
        }
    }
    post {
        success {
            echo 'Build and test execution succeeded.'
        }
        failure {
            echo 'Build or test execution failed.'
        }
    }
}
